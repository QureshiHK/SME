imageFolderSort.py takes the pre-z slice characters of file name in image sequence (outputted by imageJ save as image sequence function) and creates folders pre time point. To make it work, you need to modify the 3 character qualifier (in the final for loop) to the first 3 characters of the image files.

moveFile2CorFold.py takes the various image files and sorts them into the timepoint folders created by imageFolderSort.py. Shouldn't need to change anything for this. As ImageJ exports z slices per time point in the 'save as image sequence' function, the suffix is typically t001_z001.tif, meaning the Z slice identifier is always 9 characters, and anything preceeding the final 9 characters in the timepoint specific prefix

bracketrename is a script to sort raw unsorted zeiss z1 lightsheet output file series (.czi). The problem is that the time points are saved to individual .czi files and are not referencable by a master file. This script puts brackets around the suffix numbers denoting their position in the time series. If such a file does not exist, you can generate a master file which will point to all these now sorted files (which have been given brackets). The masterfile simply is a .czi file which carries the same name as all the time series files (which you just sorted), but it lacks a suffix. This can be created by copying a random time point file and removing the number suffix. Opening this file in zen or ImageJ will open all of the time points in the appropriate series.
To get this script to work, change the value of 'presuffixLen' to how many characters there are before the numerical suffix which denotes which time point a particular .czi file is referring to.

mitosis_track.py: Plotting 2D plots of where and when mitosis occurs in the embryo. Colour of scatter point shows timing of mitosis. Diameter of scatter point is determined by cell cycle length of dividing nucleus. The axes being plotted are determined by. Values to modify to tailor chart for a particular dataset are listed at top of script. The colour ramp and map still needs some work (2021-01-28), and currently requires some trial and error to devise the correct colour map and calculation to produce the most contrasting colour gradient (to differentiate the timing of when mitosis occurs). To make this work, paste the script file in the folder of the dataset you wish to visualise. It should refer to 'appendcsv.csv' of that specific dataset to run. Need to change this so you can manually input the file path of the dataset you want to visualise. Or incorporate into GUI where you can select it from file explorer.

lineage_corellation_plot_v2.py: Comparing 2 cell cycle lengths between family generations. Values to modify are listed atop the script. To make this work, paste the script file in the folder of the dataset you wish to visualise. It should refer to 'appendcsv.csv' of that specific dataset to run. Need to change this so you can manually input the file path of the dataset you want to visualise. Or incorporate into GUI where you can select it from file explorer.

Feature_track_plot.py: produces time lapse of detected features. The number of frames, and interval (in ms) between output timelapse frames needs to be modified for which dataset is being visualised. These values are atop the script. To make this work, paste the script file in the folder of the dataset you wish to visualise. It should refer to 'appendcsv.csv' of that specific dataset to run. Need to change this so you can manually input the file path of the dataset you want to visualise. Or incorporate into GUI where you can select it from file explorer.